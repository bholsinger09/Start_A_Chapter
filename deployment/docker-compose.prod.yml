version: '3.8'

services:
  frontend:
    image: nginx:alpine
    container_name: chapter-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../frontend/dist:/usr/share/nginx/html
      - ../frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../frontend/nginx-ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - chapter-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chapter-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chapter_organizer_prod
      - SPRING_DATASOURCE_USERNAME=chapter_user
      - SPRING_DATASOURCE_PASSWORD=secure_password_2024
      - JAVA_OPTS=-Xmx2g -Xms512m
    depends_on:
      db:
        condition: service_healthy
    networks:
      - chapter-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: chapter-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: chapter_organizer_prod
      POSTGRES_USER: chapter_user
      POSTGRES_PASSWORD: secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    restart: unless-stopped
    networks:
      - chapter-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U chapter_user -d chapter_organizer_prod" ]
      interval: 10s
      timeout: 5s
      retries: 5

  watchtower:
    image: containrrr/watchtower
    container_name: chapter-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --cleanup
    restart: unless-stopped
    networks:
      - chapter-network

volumes:
  postgres_data:


networks:
  chapter-network:
    driver: bridge
